zabbix_export:
  version: '5.2'
  date: '2022-04-03T05:37:54Z'
  media_types:
    -
      name: GoogleChat
      type: WEBHOOK
      parameters:
        21:
          name: alert_message
          value: '{ALERT.MESSAGE}'
        22:
          name: alert_subject
          value: '{ALERT.SUBJECT}'
        1:
          name: chat_url
          value: '<PLACE YOUR WEBHOOK URL>'
        23:
          name: discovery_host_dns
          value: '{DISCOVERY.DEVICE.DNS}'
        24:
          name: discovery_host_ip
          value: '{DISCOVERY.DEVICE.IPADDRESS}'
        9:
          name: event_date
          value: '{EVENT.DATE}'
        13:
          name: event_id
          value: '{EVENT.ID}'
        6:
          name: event_nseverity
          value: '{EVENT.NSEVERITY}'
        12:
          name: event_opdata
          value: '{EVENT.OPDATA}'
        19:
          name: event_recovery_date
          value: '{EVENT.RECOVERY.DATE}'
        20:
          name: event_recovery_time
          value: '{EVENT.RECOVERY.TIME}'
        11:
          name: event_severity
          value: '{EVENT.SEVERITY}'
        25:
          name: event_source
          value: '{EVENT.SOURCE}'
        5:
          name: event_tags
          value: '{EVENT.TAGS}'
        10:
          name: event_time
          value: '{EVENT.TIME}'
        17:
          name: event_update_date
          value: '{EVENT.UPDATE.DATE}'
        8:
          name: event_update_status
          value: '{EVENT.UPDATE.STATUS}'
        18:
          name: event_update_time
          value: '{EVENT.UPDATE.TIME}'
        7:
          name: event_value
          value: '{EVENT.VALUE}'
        26:
          name: host_conn
          value: '{HOST.CONN}'
        16:
          name: host_name
          value: '{HOST.HOST}'
        28:
          name: message_ts
          value: '{EVENT.TAGS.__message_ts}'
        15:
          name: trigger_description
          value: '{TRIGGER.DESCRIPTION}'
        14:
          name: trigger_id
          value: '{TRIGGER.ID}'
        0:
          name: zabbix_url
          value: '{$ZABBIX.URL}'
      script: |
        try {
            params = JSON.parse(value),
            req = new CurlHttpRequest(),
            fields = {};
            req.AddHeader('Content-Type: application/json');
            fields.Message= params.alert_message;

            var resp = req.Post(params.chat_url,
                JSON.stringify(bot_message = {'text' : params.alert_message})
            );
            if (req.Status() != 200) {
                throw resp;
            }
            resp = JSON.parse(resp);
            return JSON.stringify(resp);
        } catch (error) {
            Zabbix.Log(3, 'Google Chat notification failed : '+error);
            throw 'Google Chat notification failed : '+error;
        }
      process_tags: 'YES'
      show_event_menu: 'YES'
      event_menu_url: '{EVENT.TAGS.__message_link}'
      event_menu_name: 'Open in Slack: {EVENT.TAGS.__channel_name}'
      message_templates:
        -
          event_source: TRIGGERS
          operation_mode: PROBLEM
          subject: 'Problem: {EVENT.NAME}'
          message: |
            Problem started at {EVENT.TIME} on {EVENT.DATE}
            Problem name: {EVENT.NAME}
            Host: {HOST.NAME}
            Severity: {EVENT.SEVERITY}
            Operational data: {EVENT.OPDATA}
            Original problem ID: {EVENT.ID}
            {TRIGGER.URL}
        -
          event_source: TRIGGERS
          operation_mode: RECOVERY
          subject: 'Resolved in {EVENT.DURATION}: {EVENT.NAME}'
          message: |
            Problem has been resolved at {EVENT.RECOVERY.TIME} on {EVENT.RECOVERY.DATE}
            Problem name: {EVENT.NAME}
            Problem duration: {EVENT.DURATION}
            Host: {HOST.NAME}
            Severity: {EVENT.SEVERITY}
            Original problem ID: {EVENT.ID}
            {TRIGGER.URL}
        -
          event_source: TRIGGERS
          operation_mode: UPDATE
          subject: 'Updated problem in {EVENT.AGE}: {EVENT.NAME}'
          message: |
            {USER.FULLNAME} {EVENT.UPDATE.ACTION} problem at {EVENT.UPDATE.DATE} {EVENT.UPDATE.TIME}.
            {EVENT.UPDATE.MESSAGE}
            
            Current problem status is {EVENT.STATUS}, age is {EVENT.AGE}, acknowledged: {EVENT.ACK.STATUS}.
        -
          event_source: DISCOVERY
          operation_mode: PROBLEM
          subject: 'Discovery: {DISCOVERY.DEVICE.STATUS} {DISCOVERY.DEVICE.IPADDRESS}'
          message: |
            Discovery rule: {DISCOVERY.RULE.NAME}
            
            Device IP: {DISCOVERY.DEVICE.IPADDRESS}
            Device DNS: {DISCOVERY.DEVICE.DNS}
            Device status: {DISCOVERY.DEVICE.STATUS}
            Device uptime: {DISCOVERY.DEVICE.UPTIME}
            
            Device service name: {DISCOVERY.SERVICE.NAME}
            Device service port: {DISCOVERY.SERVICE.PORT}
            Device service status: {DISCOVERY.SERVICE.STATUS}
            Device service uptime: {DISCOVERY.SERVICE.UPTIME}
        -
          event_source: AUTOREGISTRATION
          operation_mode: PROBLEM
          subject: 'Autoregistration: {HOST.HOST}'
          message: |
            Host name: {HOST.HOST}
            Host IP: {HOST.IP}
            Agent port: {HOST.PORT}
